//------------------------------ MRO Organizer Registration Member Details Ajax Script -------------------------

var arHttpRequest;

function HLCMemberDetails()
{
	
	if(document.frmEditEventRequestReg.orgnaizerId.value!="" && document.frmEditEventRequestReg.orgnaizerId.value.indexOf(" ")!=0)
	{
    var memberid=document.frmEditEventRequestReg.orgnaizerId.value;

   /** 
    * This method is called when the author is selected 
    * It creates XMLHttpRequest object to communicate with the  
    * servlet  
    */ 
            
        var url = "./RiderInfoAjaxAction.do?memberid="+memberid; 

        if (window.ActiveXObject) 
        { 
            arHttpRequest = new ActiveXObject("Microsoft.XMLHTTP"); 
           
        } 
        else if (window.XMLHttpRequest) 
        { 
            arHttpRequest = new XMLHttpRequest(); 
        } 
     
        arHttpRequest.open("POST", url, true); 
        
        arHttpRequest.onreadystatechange = function() {membStatus(); } ; 
        arHttpRequest.send(null); 
   } 
	}
   
   /** 
    * This is the call back method 
    * If the call is completed when the readyState is 4 
    * and if the HTTP is successfull when the status is 200 
    * update the profileSection DIV 
    */ 
    function membStatus() 
    { 
   
        if (arHttpRequest.readyState == 4) 
        { 
            if(arHttpRequest.status == 200) 
            { 
                //get the XML send by the servlet 
                 var arnameXML = arHttpRequest.responseXML.getElementsByTagName("memberstatus")[0]; 
                 var arnameText = arnameXML.childNodes[0].nodeValue; 
				
				//alert
				
                if(arnameText=="false")
                {    
					alert("Member Id Doesn't Exists!"); 
					document.frmEditEventRequestReg.orgnaizerId.value="";
					document.frmEditEventRequestReg.orgnaizerId.focus();
					
					document.frmEditEventRequestReg.name.value="";
					document.frmEditEventRequestReg.address.value="";
					document.frmEditEventRequestReg.city.value="";
					document.frmEditEventRequestReg.phone.value="";
					document.frmEditEventRequestReg.fax.value="";
					document.frmEditEventRequestReg.email.value="";
										
					return false;
                }
				else
				{					
					document.frmEditEventRequestReg.name.value="";
					document.frmEditEventRequestReg.address.value="";
					document.frmEditEventRequestReg.city.value="";
					document.frmEditEventRequestReg.phone.value="";
					document.frmEditEventRequestReg.fax.value="";
					document.frmEditEventRequestReg.email.value="";
										
					details();
				}

            } 
            else 
            { 
                alert("Error loading page\n"+ arHttpRequest.status +":"+ arHttpRequest.statusText); 
            } 
        } 
    } 
	
//----------------------------------------------

var httpRequestDet;

function details()
{

if(document.frmEditEventRequestReg.orgnaizerId.value!="" && document.frmEditEventRequestReg.orgnaizerId.value.indexOf(' ')!=0)
	{

   rid=document.frmEditEventRequestReg.orgnaizerId.value;

   /** 
    * This method is called when the author is selected 
    * It creates XMLHttpRequest object to communicate with the  
    * servlet  
    */ 
        url= "RiderInfoAjaxAction.do?rid="+rid; 

        if (window.ActiveXObject) 
        { 
            httpRequestDet = new ActiveXObject("Microsoft.XMLHTTP"); 
        } 
        else if (window.XMLHttpRequest) 
        { 
            httpRequestDet = new XMLHttpRequest(); 
        } 
     
        httpRequestDet.open("GET", url, true); 
        
        httpRequestDet.onreadystatechange =processRequest; 
        httpRequestDet.send(null); 
   } 
   }
   /** 
    * This is the call back method 
    * If the call is completed when the readyState is 4 
    * and if the HTTP is successfull when the status is 200 
    * update the profileSection DIV 
    */ 
    function processRequest() 
    { 
   
        if (httpRequestDet.readyState == 4) 
        { 
            if(httpRequestDet.status == 200) 
            { 
                //get the XML send by the servlet 
                 var salutationXML = httpRequestDet.responseXML.getElementsByTagName("salutation")[0]; 
                 var salutationText = salutationXML.childNodes[0].nodeValue; 
     
                //Update the HTML 
                updateDet(salutationXML); 
            } 
            else 
            { 
                alert("Error loading page\n"+ httpRequestDet.status +":"+ httpRequestDet.statusText); 
            } 
        } 
    } 
        
   /** 
    * This function parses the XML and updates the  
    * HTML DOM by creating a new text node is not present 
    * or replacing the existing text node. 
    */ 
    function updateDet(salutationXML) 
    { 

        //The node valuse will give actual data 
        var salutationText = salutationXML.childNodes[0].nodeValue; 
        var rdetails=new Array();
        rdetails=null;
        rdetails=salutationText.split("#");
      
	  // alert("rdetails[6] :"+rdetails[6]);
	  		
	    if(rdetails[1]==NaN || rdetails[1]==undefined || rdetails[1]==null || rdetails[1]=="null")
        {
        document.frmEditEventRequestReg.name.value="NA";
        }else
        document.frmEditEventRequestReg.name.value=rdetails[1];

        if(rdetails[5]==NaN || rdetails[5]==undefined || rdetails[5]==null || rdetails[5].length==0 || rdetails[5]=="null")
        {
        document.frmEditEventRequestReg.address.value="NA";
        }else
        document.frmEditEventRequestReg.address.value=rdetails[5];

        if(rdetails[7]==NaN || rdetails[7]==undefined || rdetails[7]==null || rdetails[7]=="null")
        {
        document.frmEditEventRequestReg.city .value="NA";
        }else
        document.frmEditEventRequestReg.city .value=rdetails[7]; 

        if(rdetails[10]==NaN || rdetails[10]==undefined || rdetails[10]==null || rdetails[10]=="null")
        {
        document.frmEditEventRequestReg.phone.value="NA";
        }else
        document.frmEditEventRequestReg.phone.value=rdetails[10];

        if(rdetails[12]==NaN || rdetails[12]==undefined || rdetails[12]==null || rdetails[12]=="null")
        {
        document.frmEditEventRequestReg.email.value="NA";
        }else
        document.frmEditEventRequestReg.email.value=rdetails[12];
		
		if(rdetails[13]==NaN || rdetails[13]==undefined || rdetails[13]==null || rdetails[13]=="null" || rdetails[13]=="")
        {
        document.frmEditEventRequestReg.fax.value="NA";
        }else
        document.frmEditEventRequestReg.fax.value=rdetails[13];

    } 

//=======================================================for Area Zip Validation =========================================

//=========================================================for Sub Level Selection for Event Type=======
function selectLevels(){
	if(document.frmEditEventRequestReg.eventType.value!="" && document.frmEditEventRequestReg.eventType.selectedIndex!=0)
	{
    var eventType=document.frmEditEventRequestReg.eventType.value;
	

   /** 
    * This method is called when the author is selected 
    * It creates XMLHttpRequest object to communicate with the  
    * servlet  
    */ 
            
        var url = "./annualAjax.do?method=eventType&eventTypeId="+eventType; 

        if (window.ActiveXObject) 
        { 
            arHttpRequest = new ActiveXObject("Microsoft.XMLHTTP"); 
           
        } 
        else if (window.XMLHttpRequest) 
        { 
            arHttpRequest = new XMLHttpRequest(); 
        } 
     
        arHttpRequest.open("POST", url, true); 
        
        arHttpRequest.onreadystatechange = function() {subLevelStatus(); } ; 
        arHttpRequest.send(null); 
   	} 
	
}
/*function subLevelStatus(){
	if (arHttpRequest.readyState == 4) 
        { 
            if(arHttpRequest.status == 200) 
            { 
                //get the XML send by the servlet 
                 var arnameXML = arHttpRequest.responseXML.getElementsByTagName("size")[0]; 
				 
				 if(arnameXML==null || arnameXML==""){
					 alert("Select a Event Type");					 
					 return false;
				 }
                 var arnameText = arnameXML.childNodes[0].nodeValue;
				 		 
				 subLevelDet(arnameXML); 
            } 
            else 
            { 
                alert("Error loading page\n"+ arHttpRequest.status +":"+ arHttpRequest.statusText); 
            } 
        } 
}
function subLevelDet(salutationXML){
	
		var salutationText = salutationXML.childNodes[0].nodeValue; 
        var levelDetails=new Array();
        levelDetails=null;
		for(var i = 0; i<Number(salutationText);i++){
			var subLevelXML = arHttpRequest.responseXML.getElementsByTagName("SubLevelDetails")[i];
			subLevelText = subLevelXML.childNodes[0].nodeValue;
        	levelDetails=subLevelText.split("#");
			if(levelDetails!=null){
      		var mapTypeId = levelDetails[0];
			var levelId = levelDetails[1];
			var eventLevelCode = levelDetails[2];
			var eventLevelName = levelDetails[3];
			addCheckbox(mapTypeId,eventLevelCode);
			}
		}
}

function subLevelStatus(){
	if (arHttpRequest.readyState == 4) 
        { 
            if(arHttpRequest.status == 200) 
            { 
                //get the XML send by the servlet 
                 var arnameXML = arHttpRequest.responseXML//.documentElement; 
				 
				 if(arnameXML==null || arnameXML==""){
					 alert("Select a Event Type");					 
					 return false;
				 }
                 //var arnameText = arnameXML.childNodes[0].nodeValue;
				 //alert(arnameText);		 
				 subLevelDet(arnameXML); 
            } 
            else 
            { 
                alert("Error loading page\n"+ arHttpRequest.status +":"+ arHttpRequest.statusText); 
            } 
        } 
}
function subLevelDet(salutationXML){
		alert(salutationXML);
		var salutationText = arHttpRequest.responseXML.getElementsByTagName("SubLevelDetails").length; 
        var levelDetails=new Array();
        levelDetails=null;
		for(var i = 0; i<Number(salutationText);i++){
			var subLevelXML = arHttpRequest.responseXML.getElementsByTagName("SubLevelDetails")[i];
			//subLevelText = subLevelXML.childNodes[0].nodeValue;
        	//levelDetails=subLevelText.split("#");
			if(levelDetails!=null){
      		var mapTypeId = subLevelXML.getElementsByTagName("MapId")[0].childNodes[0].nodeValue//.firstChild.data;
			//var levelId = levelDetails[1];
			var eventLevelCode = subLevelXML.getElementsByTagName("Levelcode")[0].childNodes[0].nodeValue//firstChild.data;
			//var eventLevelName = levelDetails[3];
			addCheckbox(mapTypeId,eventLevelCode);
			}
		}
}


function addCheckbox( mapTypeId,eventLevelCode){
	var tbl = document.getElementById('tblGrid');
	var lastRow = document.frmEditEventRequestReg.eventCount.value;
	var iteration = eval(lastRow)+1;
	var row = tbl.insertRow(lastRow);
	
	var cellRight = row.insertCell(0);	
	var el = document.createElement('input');
	el.setAttribute('type', 'checkbox');
	el.setAttribute('name', 'eventLevels');
	el.setAttribute('id', 'eventLevels');
	e1.setAttribute('value',''+mapTypeId);
	//el.setAttribute('class', 'fonts_3');
	cellRight.appendChild(el);
	
	var cellLeft = row.insertCell(1);
	var textNode = document.createTextNode(eventLevelCode);
	cellLeft.appendChild(textNode);

	
	document.frmEditEventRequestReg.eventCount.value = iteration;
}
*/
